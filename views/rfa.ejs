<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>RFA Upload</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }

        body {
            min-height: 100vh;
            background: linear-gradient(45deg, #FF5722 50%, #796B63 50%);
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .form-group input[type="text"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }

        input[type="file"] {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }

        button {
            background: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-weight: bold;
        }

        button:hover {
            background: #45a049;
        }

        .results-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        
        .results-table th, .results-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        
        .results-table th {
            background-color: #f5f5f5;
            font-weight: bold;
        }

        #existingDocuments, #uploadSection {
            display: none;
            margin-top: 20px;
        }

        #uploadStatus {
            margin-top: 15px;
            padding: 10px;
            border-radius: 4px;
        }

        #uploadStatus.success {
            background-color: #dff0d8;
            color: #3c763d;
        }

        #uploadStatus.error {
            background-color: #f2dede;
            color: #a94442;
        }

        input {
            position: relative;
        }
        
        input::placeholder {
            opacity: 0;
        }
        
        input:focus {
            position: relative;
        }

        input:focus::after {
            content: '|';
            position: absolute;
            color: black;
            animation: blink 1s infinite;
        }
        
        @keyframes blink {
            50% { opacity: 0; }
        }

        h1, h2 {
            margin-bottom: 20px;
            color: #333;
        }

        a {
            color: #4CAF50;
            text-decoration: none;
        }

        a:hover {
            text-decoration: underline;
        }
        .search-btn {
            background: #4a148c;
            margin-top: 10px;
            width: 100%;
        }

        .status-message {
            margin: 15px 0;
            padding: 10px;
            border-radius: 4px;
            text-align: center;
            font-weight: bold;
        }

        .loading {
            background-color: #e3f2fd;
            color: #1565c0;
        }

        .not-found {
            background-color: #ffebee;
            color: #c62828;
        }

        .found {
            background-color: #e8f5e9;
            color: #2e7d32;
        }    
        #uploadStatus {
            margin-top: 15px;
            padding: 10px;
            border-radius: 4px;
            text-align: center;
        }

        #uploadStatus.uploading {
            background-color: #e3f2fd;
            color: #1565c0;
        }

        #uploadStatus.success {
            background-color: #e8f5e9;
            color: #2e7d32;
        }

        #uploadStatus.error {
            background-color: #ffebee;
            color: #c62828;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        .form-group input[type="text"],
        .form-group input[type="file"] {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        button[type="submit"] {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            width: 100%;
            font-weight: bold;
        }

        button[type="submit"]:hover {
            background-color: #45a049;
        }   
        .uploading {
            background-color: #e3f2fd;
            color: #1565c0;
            padding: 10px;
            margin-top: 10px;
            border-radius: 4px;
            text-align: center;
        }

        button[type="submit"]:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }    
        .btn-loading {
            opacity: 0.7;
            cursor: not-allowed;
        }
        
        /* เพิ่ม CSS สำหรับ file validation */
        .file-error {
            border-color: #dc3545;
        }
        
        .validation-message {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }                     
    </style>
</head>
<body>
    <div class="container">
        <h1>RFA Document Upload</h1>
        
        <div class="form-section">
            <form id="documentForm">
                <!-- ฟอร์มเดิม -->
                <div class="form-group">
                    <label for="site">โครงการ:</label>
                    <select id="site" name="site" required>
                        <option value="">เลือกโครงการ</option>
                    </select>
                </div>
                
                <div class="form-group">
                    <label for="category">หมวดงาน:</label>
                    <input type="text" 
                           id="categoryInput" 
                           list="categoryList" 
                           placeholder="|"
                           autocomplete="off">
                    <datalist id="categoryList"></datalist>
                </div>
                
                <div class="form-group">
                    <label for="documentNumber">เลขที่เอกสาร:</label>
                    <input type="text" 
                           id="documentNumber" 
                           maxlength="3" 
                           pattern="[0-9]{3}" 
                           placeholder="|"
                           required>
                </div>
        
                <!-- เพิ่มปุ่มค้นหา -->
                <button type="button" id="searchButton" class="search-btn">
                    <i class="fas fa-search"></i> ค้นหาเอกสาร
                </button>
            </form>
            
            <!-- เพิ่มส่วนแสดงสถานะการค้นหา -->
            <div id="searchStatus" style="display: none;" class="status-message"></div>
        </div>

        <!-- ตารางแสดงเอกสารที่มีอยู่ -->
        <div id="existingDocuments">
            <h2>เอกสารที่มีอยู่</h2>
            <table class="results-table">
                <thead>
                    <tr>
                        <th>Rev.No</th>
                        <th>วันที่ส่ง</th>
                        <th>ไฟล์แนบ</th>
                        <th>ผู้ส่ง</th>
                    </tr>
                </thead>
                <tbody id="documentsTableBody"></tbody>
            </table>
        </div>

        <!-- ส่วนเพิ่มเอกสารใหม่ -->
        <div id="uploadSection">
            <h2>เพิ่มเอกสารใหม่</h2>
            <form id="uploadForm" enctype="multipart/form-data">
                <!-- ฟิลด์ซ่อนสำหรับเก็บข้อมูลจากการค้นหา -->
                <input type="hidden" id="uploadSiteId" name="siteId">
                <input type="hidden" id="uploadCategory" name="category">
                <input type="hidden" id="uploadDocumentNumber" name="documentNumber">
                
                <div class="form-group">
                    <label for="documentName">ชื่อเอกสาร:</label>
                    <input type="text" 
                           id="documentName" 
                           name="documentName" 
                           required 
                           placeholder="ระบุชื่อเอกสาร"
                           autocomplete="off">
                </div>
                
                <div class="form-group">
                    <label for="documentFile">แนบไฟล์:</label>
                    <input type="file" 
                           id="documentFile" 
                           name="document" 
                           required>
                </div>
                
                <button type="submit" id="submitButton">ส่งเอกสาร</button>
            </form>
            <div id="uploadStatus"></div>
        </div>
    </div>

    <script>
        function validateInput() {
            const documentNumber = document.getElementById('documentNumber');
            const pattern = /^[0-9]{3}$/;
            
            if (!pattern.test(documentNumber.value)) {
                showStatus('เลขที่เอกสารต้องเป็นตัวเลข 3 หลัก', 'not-found');
                return false;
            }
            return true;
        }

        // ฟังก์ชันสำหรับ validate file
        function validateFile(file) {
            const maxSize = 10 * 1024 * 1024; // 10MB
            const allowedTypes = ['application/pdf', 'application/msword', 
                                'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];
            
            if (file.size > maxSize) {
                showStatus('ขนาดไฟล์ต้องไม่เกิน 10MB', 'error');
                return false;
            }
            
            if (!allowedTypes.includes(file.type)) {
                showStatus('รองรับเฉพาะไฟล์ PDF และ Word เท่านั้น', 'error');
                return false;
            }
            
            return true;
        }

        // ฟังก์ชันสำหรับ set loading state
        function setLoading(isLoading) {
            const searchBtn = document.getElementById('searchButton');
            const inputs = document.querySelectorAll('input, select, button');
            
            inputs.forEach(input => {
                input.disabled = isLoading;
            });
            
            if (isLoading) {
                searchBtn.classList.add('btn-loading');
                searchBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> กำลังค้นหา...';
            } else {
                searchBtn.classList.remove('btn-loading');
                searchBtn.innerHTML = '<i class="fas fa-search"></i> ค้นหาเอกสาร';
            }
        }

        // ฟังก์ชันสำหรับจัดการ error
        function handleError(error, type = 'search') {
            console.error(`${type} error:`, error);
            let message = 'เกิดข้อผิดพลาด';
            
            if (error.message.includes('500')) {
                message = 'เกิดข้อผิดพลาดที่เซิร์ฟเวอร์';
            } else if (error.message.includes('404')) {
                message = 'ไม่พบข้อมูลที่ต้องการ';
            }
            
            showStatus(`${type === 'search' ? 'ค้นหา' : 'อัพโหลด'}ไม่สำเร็จ: ${message}`, 'error');
        }

        // ปรับปรุงฟังก์ชัน checkDocument
        async function checkDocument() {
            if (!validateInput()) return;
            
            const siteId = document.getElementById('site').value;
            const category = document.getElementById('categoryInput').value;
            const documentNumber = document.getElementById('documentNumber').value;

            if (!siteId || !category || !documentNumber) {
                showStatus('กรุณากรอกข้อมูลให้ครบถ้วน', 'not-found');
                return;
            }

            try {
                setLoading(true);
                showStatus('กำลังค้นหาเอกสาร...', 'loading');

                const response = await fetch(`/user/rfa/check-document?siteId=${siteId}&category=${category}&documentNumber=${documentNumber}`);
                if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
                
                const data = await response.json();
                console.log('Check document response:', data);

                document.getElementById('existingDocuments').style.display = 'none';
                document.getElementById('uploadSection').style.display = 'none';

                if (data.success) {
                    handleSearchResult(data, { siteId, category, documentNumber });
                } else {
                    showStatus(data.error || 'เกิดข้อผิดพลาดในการค้นหา', 'not-found');
                }
            } catch (error) {
                handleError(error);
            } finally {
                setLoading(false);
            }
        }

        // ฟังก์ชันสำหรับจัดการผลการค้นหา
        function handleSearchResult(data, formData) {
            if (data.exists && data.documents.length > 0) {
                showExistingDocuments(data.documents);
            } else {
                showUploadSection(formData);
            }
        }

        // ฟังก์ชันสำหรับแสดงเอกสารที่มีอยู่
        function showExistingDocuments(documents) {
            showStatus('รายการเอกสารที่มีในระบบ', 'found');
            document.getElementById('existingDocuments').style.display = 'block';
            
            const tbody = document.getElementById('documentsTableBody');
            tbody.innerHTML = '';
            documents.forEach(doc => {
                tbody.innerHTML += `
                    <tr>
                        <td>${doc.revision_number}</td>
                        <td>${formatDate(doc.submission_date) || '-'}</td>
                        <td><a href="${doc.file_url}" target="_blank">ดูไฟล์</a></td>
                        <td>${doc.submitter}</td>
                    </tr>
                `;
            });
        }

        // ฟังก์ชันสำหรับแสดงส่วนอัพโหลด
        function showUploadSection(formData) {
            showStatus('ไม่มีเอกสารฉบับนี้ในระบบ', 'not-found');
            document.getElementById('uploadSection').style.display = 'block';
            
            document.getElementById('uploadSiteId').value = formData.siteId;
            document.getElementById('uploadCategory').value = formData.category;
            document.getElementById('uploadDocumentNumber').value = formData.documentNumber;
        }

        // ฟังก์ชันสำหรับจัดรูปแบบวันที่
        function formatDate(dateString) {
            if (!dateString) return '-';
            return new Date(dateString).toLocaleDateString('th-TH');
        }        

        function showStatus(message, type) {
            const statusDiv = document.getElementById('searchStatus');
            statusDiv.textContent = message;
            statusDiv.className = `status-message ${type}`;
            statusDiv.style.display = 'block';

            // ถ้าเป็นสถานะ loading ให้แสดง spinner
            if (type === 'loading') {
                statusDiv.innerHTML = `
                    <i class="fas fa-spinner fa-spin"></i> ${message}
                `;
            }
        } 
        // ผูกเหตุการณ์กับปุ่มค้นหา
        document.getElementById('searchButton').addEventListener('click', checkDocument);

             
        // โหลดรายการโครงการเมื่อโหลดหน้า
        window.addEventListener('load', async () => {
            try {
                console.log('Fetching sites...');
                const response = await fetch('/user/rfa/user-sites');
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const data = await response.json();
                console.log('API Response:', data);
                
                if (data.success) {
                    const siteSelect = document.getElementById('site');
                    siteSelect.innerHTML = '<option value="">เลือกโครงการ</option>';
                    
                    data.sites.forEach(site => {
                        const option = document.createElement('option');
                        option.value = site.id;
                        option.textContent = site.site_name;
                        siteSelect.appendChild(option);
                    });
                } else {
                    console.error('Failed to load sites:', data.error);
                }
            } catch (error) {
                console.error('Error loading sites:', error);
            }
        });

        // โหลดหมวดงานเมื่อเลือกโครงการ
        document.getElementById('site').addEventListener('change', async (e) => {
            try {
                const siteId = e.target.value;
                if (!siteId) return;

                // แก้ path ให้ถูกต้อง
                const response = await fetch(`/user/rfa/categories/${siteId}`);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();
                console.log('Categories response:', data);

                if (data.success) {
                    const datalist = document.getElementById('categoryList');
                    datalist.innerHTML = '';
                    data.categories.forEach(category => {
                        const option = document.createElement('option');
                        option.value = category.category_name;
                        datalist.appendChild(option);
                    });
                }
            } catch (error) {
                console.error('Error loading categories:', error);
            }
        });

        // ผูกเหตุการณ์การตรวจสอบเอกสาร
        ['site', 'categoryInput', 'documentNumber'].forEach(id => {
            document.getElementById(id).addEventListener('change', checkDocument);
        });

        // จัดการการส่งฟอร์มอัพโหลด
        document.getElementById('uploadForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const statusDiv = document.getElementById('uploadStatus');
            const submitButton = e.target.querySelector('button[type="submit"]');
            const formData = new FormData(e.target);
            
            try {
                submitButton.disabled = true;
                statusDiv.textContent = 'กำลังอัพโหลดไฟล์...';
                statusDiv.className = 'uploading';

                const response = await fetch('/user/rfa/upload', {
                    method: 'POST',
                    body: formData
                });

                if (!response.ok) {
                    throw new Error(`Upload failed: ${response.statusText}`);
                }

                const result = await response.json();

                if (result.success) {
                    statusDiv.textContent = 'อัพโหลดสำเร็จ';
                    statusDiv.className = 'success';
                    
                    // รีเซ็ตฟอร์มและรีโหลดหน้าหลังจาก 2 วินาที
                    setTimeout(() => {
                        location.reload();
                    }, 2000);
                }

            } catch (error) {
                console.error('Upload error:', error);
                statusDiv.textContent = `อัพโหลดไม่สำเร็จ: ${error.message}`;
                statusDiv.className = 'error';
            } finally {
                submitButton.disabled = false;
            }
        });
    </script>
</body>
</html>